#%RAML 1.0
title: Zero-OS 0 Rest API Server
version: v1.1.0-alpha
mediaType:  application/json

annotationTypes:
  AYSBased:
    type: nil
    allowedTargets: [Resource, Method]
    description: Mark the call as executed by AYS in the backend
  DirectAccess:
    type: nil
    allowedTargets: [Resource, Method]
    description: Mark the call as going directly to the G8OS node

types:
  !include types.raml


/nodes:
  get:
    (AYSBased):
    description: List all nodes
    displayName: ListNodes
    responses:
      200:
        body:
          application/json:
            type: Node[]
  /{nodeid}:
    delete:
      (AYSBased):
      description: Delete a node
      displayName: DeleteNode
      responses:
        204:
          description: Node deleted successfully
    get:
      (AYSBased):
      description: Get detailed information of a node
      displayName: GetNode
      responses:
        200:
          body:
            application/json:
              type: Node
    /jobs:
      description: List all jobs of this node
      get:
        (DirectAccess):
        displayName: ListNodeJobs
        description: List running jobs
        responses:
          200:
            body:
              application/json:
                type: JobListItem[]
      delete:
        (DirectAccess):
        displayName: KillAllNodeJobs
        description: Kill all running jobs
        responses:
          204:
            description: Jobs killed successfully
      /{jobid}:
        get:
          (DirectAccess):
          displayName: GetNodeJob
          description: Get the details of a submitted job
          responses:
            200:
              body:
                application/json:
                  type: JobResult
        delete:
          (DirectAccess):
          displayName: KillNodeJob
          description: Kills the job
          responses:
            204:
              description: Jobs killed successfully
    /ping:
      post:
        (DirectAccess):
        displayName: PingNode
        description: Ping this node
        responses:
          200:
            body:
              application/json:
                description: Returns true when the g8os responds
                type: boolean
    /state:
      get:
        (DirectAccess):
        displayName: GetNodeState
        description: The aggregated consumption of node + all processes (cpu, memory, etc...)
        responses:
          200:
            body:
              application/json:
                type:
                  CoreStateResult
    /reboot:
      post:
        (AYSBased):
        displayName: RebootNode
        description: Immediately reboot the machine
        responses:
          204:
            description: Machine reboot signal sent successfully
    /cpus:
      get:
        (DirectAccess):
        displayName: GetCPUInfo
        description: Get detailed information of all CPUs in the node
        responses:
          200:
            body:
              application/json:
                type: CPUInfo[]
    /disks:
      get:
        (DirectAccess):
        displayName: GetDiskInfo
        description: Get detailed information of all the disks in the node
        responses:
          200:
            body:
              application/json:
                type: DiskInfo[]
    /mounts:
      get:
        (DirectAccess):
        displayName: GetNodeMounts
        description: Get detailed information of all the mountpoints on the node
        responses:
          200:
            body:
              application/json:
                type: NodeMount[]
    /mem:
      get:
        (DirectAccess):
        displayName: GetMemInfo
        description: Get detailed information about the memory in the node
        responses:
          200:
            body:
              application/json:
                type: MemInfo
    /nics:
      get:
        (DirectAccess):
        displayName: GetNicInfo
        description: Get detailed information about the network interfaces in the node
        responses:
          200:
            body:
              application/json:
                type: NicInfo[]
    /info:
      get:
        (DirectAccess):
        displayName: GetNodeOSInfo
        description: Get detailed information of the OS of the node
        responses:
          200:
            body:
              application/json:
                type: OSInfo
    /processes:
       get:
         (DirectAccess):
         displayName: ListNodeProcesses
         description: Get processes
         responses:
           200:
             body:
               application/json:
                 type: Process[]
       /{processid}:
         get:
           (DirectAccess):
           displayName: GetNodeProcess
           description: Get process details
           responses:
             200:
               body:
                 application/json:
                   type: Process
         delete:
           (DirectAccess):
           displayName: KillNodeProcess
           description: Kills the process by sending sigterm signal to the process.
                        If it is still running, a sigkill signal will be sent to the process
           responses:
             204:
               description: Job killed successfully
    /bridges:
      post:
        (AYSBased):
        displayName: CreateBridge
        description: Creates a new bridge
        body:
          application/json:
            type: BridgeCreate
        responses:
          201:
            description: Bridge created successfully
            headers:
              Location:
                description: URL to the created bridge resource
      get:
        (AYSBased):
        displayName: ListBridges
        description: List bridges
        responses:
          200:
            body:
              application/json:
                type: Bridge[]
      /{bridgeid}:
        get:
          (AYSBased):
          displayName: GetBridge
          description: Get bridge details
          responses:
            200:
              body:
                application/json:
                  type: Bridge
        delete:
          (AYSBased):
          displayName: DeleteBridge
          description: Remove bridge
          responses:
            204:
              description: Bridge removed successfully
    /storagepools:
      get:
        (AYSBased):
        displayName: ListStoragePools
        description: List storage pools present in the node
        responses:
          200:
            body:
              application/json:
                type: StoragePoolListItem[]
      post:
        (AYSBased):
        displayName: CreateStoragePool
        description: Create a new storage pool in the node
        body:
          application/json:
            type: StoragePoolCreate
        responses:
          201:
            headers:
              Location:
                description: Url to the newly created storagepool.
      /{storagepoolname}:
        get:
          (AYSBased):
          displayName: GetStoragePoolInfo
          description: Get detailed information of this storage pool
          responses:
            200:
              body:
                application/json:
                  type: StoragePool
        delete:
          (AYSBased):
          displayName: DeleteStoragePool
          description: Delete the storage pool
          responses:
            204:
              description: Storage pool deleted successfully
        /devices:
          get:
            (AYSBased):
            displayName: ListStoragePoolDevices
            description: List the devices in the storage pool
            responses:
              200:
                body:
                  application/json:
                    description: List of devices of the storage pool
                    type: StoragePoolDevice[]
          post:
            (AYSBased):
            displayName: CreateStoragePoolDevices
            description: Add extra devices to this storage pool
            body:
              application/json:
                description: List of devices to add to the storage pool
                type: string[]
                example: ['/dev/sdc', '/dev/sdd']
            responses:
              204:
                description: Devices added successfully
          /{deviceuuid}:
            get:
              displayName: GetStoragePoolDeviceInfo
              description: Get information of the device
              responses:
                200:
                  body:
                    application/json:
                      type: StoragePoolDevice
            delete:
              (AYSBased):
              displayName: DeleteStoragePoolDevice
              description: Removes the device from the storage pool
              responses:
                204:
                  description: Removal started successfully
                  headers:
                    Location:
                      description: URL to the storage pool device resource being removed
        /filesystems:
          get:
            (AYSBased):
            displayName: ListFilesystems
            description: List all file systems
            responses:
              200:
                body:
                  application/json:
                    description: All file systems
                    type: string[]
          post:
            (AYSBased):
            displayName: CreateFilesystem
            description: Create a new file system
            body:
              application/json:
                type: FilesystemCreate
            responses:
              201:
                headers:
                  Location:
                    description: URL for the newly created file system
          /{filesystemname}:
            get:
              (AYSBased):
              displayName: GetFilesystemInfo
              description: Get detailed file system information
              responses:
                200:
                  body:
                    application/json:
                      type: Filesystem
            delete:
              (AYSBased):
              displayName: DeleteFilesystem
              description: Delete file system
              responses:
                204:
                  description: File system deleted successfully
            /snapshots:
              get:
                (AYSBased):
                displayName: ListFilesystemSnapshots
                description: List snapshots of this file system
                responses:
                  200:
                    body:
                      application/json:
                        description: List of snapshots
                        type: string[]
              post:
                (AYSBased):
                displayName: CreateSnapshot
                description: Create a new read-only snapshot of the current state of the vdisk
                body:
                  application/json:
                    properties:
                      name:
                        type: string
                        description: |
                         Unique identifier for the snapshot
                         Permitted characters: a-z,-, _ and .
                         Max length: 50 characters.
                responses:
                  201:
                    description: Snapshot created successfully
                    headers:
                      Location:
                        description: Url to the created snapshot resource
              /{snapshotname}:
                get:
                  (AYSBased):
                  displayName: GetFilesystemSnapshotInfo
                  description: Get detailed information on the snapshot
                  responses:
                    200:
                      body:
                        application/json:
                          type: Snapshot
                delete:
                  (AYSBased):
                  displayName: DeleteFilesystemSnapshot
                  description: Delete snapshot
                  responses:
                    204:
                      description: Snapshot deleted successfully
                /rollback:
                  post:
                    (AYSBased):
                    displayName: RollbackFilesystemSnapshot
                    description: Rollback the file system to the state at the moment the snapshot was taken
                    responses:
                      204:
                        description: Snapshot rollbacked successfully
    /zerotiers:
      get:
        (AYSBased):
        displayName: ListZerotier
        description: List running ZeroTier networks
        responses:
          200:
            body:
              application/json:
                type: ZerotierListItem[]
      post:
        (AYSBased):
        displayName: JoinZerotier
        description: Join ZeroTier network
        body:
          application/json:
            type: ZerotierJoin
        responses:
          201:
            description: ZeroTier network joined successfully
            headers:
              Location:
                description: URL to the created ZeroTier network resource
      /{zerotierid}:
        get:
          (AYSBased):
          displayName: GetZerotier
          description: Get ZeroTier network details
          responses:
            200:
              body:
                application/json:
                  type: Zerotier
        delete:
          (AYSBased):
          displayName: ExitZerotier
          description: Exit the ZeroTier network
          responses:
            204:
              description: ZeroTier network exited successfully
    /gws:
      get:
        (AYSBased):
        displayName: ListGateways
        description: List running gateways
        responses:
          200:
            body:
              application/json:
                type: ListGW[]
      post:
        (AYSBased):
        displayName: CreateGW
        description: Create a new gateway
        body:
          application/json:
            type: GWCreate
        responses:
          201:
            description: Gateway created successfully
            headers:
              Location:
                description: URL to the created gateway resource
          409:
            description: A gateway with this name already exists
      /{gwname}:
        delete:
          (AYSBased):
          displayName: DeleteGateway
          description: Delete gateway instance
          responses:
            204:
              description: Gateway deleted successfully
        get:
          (AYSBased):
          displayName: GetGateway
          description: Get gateway
          responses:
            200:
              body:
                application/json:
                  type: GetGW
        put:
          (AYSBased):
          displayName: UpdateGateway
          description: Update Gateway
          body:
            application/json:
              type: GW
          responses:
            204:
              description: Gateway updated successfully

        /firewall:
          /forwards:
            get:
              displayName: GetGWForwards
              description: |
                Get list for IPv4 Forwards
              responses:
                200:
                  body:
                    application/json:
                      type: PortForward[]
            post:
              displayName: CreateGWForwards
              description: |
                Create a new Portforwarding
              body:
                application/json:
                  type: PortForward
              responses:
                201:
                  description: |
                    Succesfully created a new resource
                  headers:
                    Location:
                      description: |
                        Location of the newly created resource
                      type: string
                      required: false
            /{forwardid}:
              delete:
                displayName: DeleteGWForward
                description: |
                  Delete portforward, forwardid = srcip:srcport
                responses:
                  204:
                    description: |
                      Succesfully deleted resource

        /dhcp:
          /{interface}:
            /hosts:
              get:
                displayName: ListGWDHCPHosts
                description: List DHCPHosts for specified interface
                responses:
                  200:
                    body:
                      application/json:
                        type: GWHost[]
                  404:
                    description: No dhcp is defined for this interface.
              post:
                displayName: AddGWDHCPHost
                description: Add a dhcp host to a specified interface
                responses:
                  204:
                    description: Host added successfully
                  404:
                    description: No dhcp is defined for this interface or interface doesn't exist
                body:
                  application/json:
                    type: GWHost
              /{macaddress}:
                delete:
                  displayName: DeleteDHCPHost
                  description: |
                    Delete dhcp host
                  responses:
                    204:
                      description: |
                        Succesfully deleted resource
                    404:
                      description: No dhcp is defined for this interface or no host with this macaddress exist

        /advanced:
          /http:
            get:
              displayName: GetGWHTTPConfig
              description: Get current HTTP config
              responses:
                200:
                  body:
                    text/plain:
                      type: string
            post:
              displayName: SetGWHTTPConfig
              description: |
                Set HTTP config
                Once used you can not use gw.httpproxxies any longer
              body:
                text/plain:
                  type: string

          /firewall:
            get:
              displayName: GetGWFWConfig
              description: Get current FW config
              responses:
                200:
                  body:
                    text/plain:
                      type: string
            post:
              displayName: SetGWFWConfig
              description: |
                Set FW config
                Once used you can not use gw.portforwards any longer
              body:
                text/plain:
                  type: string

        /start:
          post:
            (AYSBased):
            displayName: StartGateway
            description: Start Gateway instance
            responses:
              201:
                description: Gateway started successfully
        /stop:
          post:
            (AYSBased):
            displayName: StopGateway
            description: Stop gateway instance
            responses:
              204:
                description: Gateway stopped successfully
        /httpproxies:
          get:
              (AYSBased):
              displayName: ListHTTPProxies
              description: List for HTTP proxies
              responses:
                200:
                  body:
                    application/json:
                      type: HTTPProxy[]
          post:
            (AYSBased):
            displayName: CreateHTTPProxies
            description: Create new HTTP proxies
            body:
              application/json:
                type: HTTPProxy
            responses:
              201:
                description: Succesfully created a new resource
                headers:
                  Location:
                    description: Location of the newly created resource
                    type: string
                    required: false
          /{proxyid}:
            get:
              (AYSBased):
              displayName: GetHTTPProxy
              description: Get info of HTTP proxy
              responses:
                200:
                  body:
                    application/json:
                      type: HTTPProxy
            delete:
                (AYSBased):
                displayName: DeleteHTTPProxies
                description: Delete HTTP proxy
                responses:
                  204:
                    description: Succesfully deleted resource
                  404:
                    description: Proxy is not found in this gateway
    /containers:
      get:
        (AYSBased):
        displayName: ListContainers
        description: List running containers
        responses:
          200:
            body:
              application/json:
                type: ContainerListItem[]
      post:
        (AYSBased):
        displayName: CreateContainer
        description: Create a new container
        body:
          application/json:
            type: CreateContainer
        responses:
          201:
            description: Container created successfully
            headers:
              Location:
                description: URL to the created container resource
      /{containername}:
        delete:
          (AYSBased):
          displayName: DeleteContainer
          description: Delete container instance
          responses:
            204:
              description: Container deleted successfully
        get:
          (AYSBased):
          displayName: GetContainer
          description: Get container
          responses:
            200:
              body:
                application/json:
                  type: Container
        /start:
          post:
            (AYSBased):
            displayName: StartContainer
            description: Start container instance
            responses:
              201:
                description: Container started successfully
        /stop:
          post:
            (AYSBased):
            displayName: StopContainer
            description: Stop container instance
            responses:
              204:
                description: Container stopped successfully
        /filesystem:
          post:
            (DirectAccess):
            description: Upload file to container
            displayName: FileUpload
            queryString:
              properties:
                path: string
            body:
              multipart/form-data:
                properties:
                  file:
                    type: file
                    required: true
                    description: The file to upload
            responses:
              204:
                description: File uploaded successfully
          get:
            (DirectAccess):
            description: Download file from container
            displayName: FileDownload
            queryString:
              properties:
                path: string
            responses:
              200:
                body:
                  application/octet-stream:
          delete:
            (DirectAccess):
            description: Delete file from container
            displayName: FileDelete
            body:
              application/json:
                type: DeleteFile
            responses:
              204:
                description: File deleted successfully
        /jobs:
          get:
            (DirectAccess):
            displayName: ListContainerJobs
            description: List running jobs on the container
            responses:
              200:
                body:
                  application/json:
                    type: JobListItem[]
          post:
            (DirectAccess):
            displayName: StartContainerJob
            description: Start a new job in this container
            body:
              application/json:
                type: CoreSystem
            responses:
              202:
                headers:
                  Location:
                    description: URL to the job object handling this request
          delete:
            (DirectAccess):
            displayName: KillAllContainerJobs
            description: Kill all running jobs on the container
            responses:
              204:
                description: Jobs killed successfully
          /{jobid}:
            get:
              (DirectAccess):
              displayName: GetContainerJob
              description: Get details of a submitted job on the container
              responses:
                200:
                  body:
                    application/json:
                      type: JobResult
            post:
              (DirectAccess):
              displayName: SendSignalToJob
              description: Send signal to the job
              body:
                application/json:
                  type: ProcessSignal
            delete:
              (DirectAccess):
              displayName: KillContainerJob
              description: Kills the job
              responses:
                204:
                  description: Job killed successfully
        /ping:
          post:
            (DirectAccess):
            displayName: PingContainer
            description: Ping this container
            responses:
              200:
                body:
                  application/json:
                    type: boolean
        /state:
          get:
            (DirectAccess):
            displayName: GetContainerState
            description: Get aggregated consumption of container + all processes (CPU, memory, etc.)
            responses:
              200:
                body:
                  application/json:
                    type:
                      CoreStateResult
        /cpus:
          get:
            (DirectAccess):
            displayName: GetContainerCPUInfo
            description: Get detailed information of all CPUs in the container
            responses:
              200:
                body:
                  application/json:
                    type: CPUInfo[]
        /disks:
          get:
            (DirectAccess):
            displayName: GetContainerDiskInfo
            description: Get detailed information of all the disks in the container
            responses:
              200:
                body:
                  application/json:
                    type: DiskInfo[]
        /mem:
          get:
            (DirectAccess):
            displayName: GetContainerMemInfo
            description: Get detailed information about the memory in the container
            responses:
              200:
                body:
                  application/json:
                    type: MemInfo
        /nics:
          get:
            (DirectAccess):
            displayName: GetContainerNicInfo
            description: Get detailed information about the network interfaces in the container
            responses:
              200:
                body:
                  application/json:
                    type: NicInfo[]
        /info:
          get:
            (DirectAccess):
            displayName: GetContainerOSInfo
            description: Get detailed information of the container OS
            responses:
              200:
                body:
                  application/json:
                    type: OSInfo
        /processes:
           get:
             (DirectAccess):
             displayName: ListContainerProcesses
             description: Get running processes in this container
             responses:
               200:
                 body:
                   application/json:
                     type: Process[]
           /{processid}:
             get:
               (DirectAccess):
               displayName: GetContainerProcess
               description: Get process details
               responses:
                 200:
                   body:
                     application/json:
                       type: Process
             delete:
               (DirectAccess):
               displayName: KillContainerProcess
               description: Kills the process by sending sigterm signal to the process.
                            If it is still running, a sigkill signal will be sent to the process
               responses:
                 204:
                   description: Process killed successfully
             post:
               (DirectAccess):
               displayName: SendSignalToProcess
               description: Send signal to the process
               body:
                 application/json:
                   type: ProcessSignal
    /vms:
      get:
        (AYSBased):
        description: List all virtual machines
        displayName: ListVMs
        responses:
          200:
            body:
              application/json:
                type: VMListItem[]
      post:
        (AYSBased):
        description: Creates a new virtual machine
        displayName: CreateVM
        body:
          application/json:
            type: VMCreate
        responses:
          201:
            description: Virtual machine created successfully
            headers:
              Location:
                description: URL to the created virtual machine resource
      /{vmid}:
        delete:
          (AYSBased):
          displayName: DeleteVM
          description: Deletes the virtual machine
          responses:
            204:
              description: Virtual machine stopped successfully
        get:
          (AYSBased):
          displayName: GetVM
          description: Get the virtual machine object
          responses:
            200:
              body:
                application/json:
                  type: VM
        put:
          displayName: UpdateVM
          description: Updates the virtual machine
          body:
            application/json:
              type: VMUpdate
          responses:
            204:
              description: Virtual machine updated successfully
        /info:
          get:
            (DirectAccess):
            displayName: GetVMInfo
            description: Get statistical information about the virtual machine.
            responses:
              200:
                body:
                  application/json:
                    type: VMInfo
        /start:
          post:
            (AYSBased):
            displayName: StartVM
            description: Start the virtual machine
            responses:
              204:
                description: Virtual machine started successfully
        /stop:
          post:
            (AYSBased):
            displayName: StopVM
            description: Stops the VM
            responses:
              204:
                description: Virtual machine stopped successfully
        /pause:
          post:
            (AYSBased):
            displayName: PauseVM
            description: Pauses the VM
            responses:
              204:
                description: Virtual machine paused successfully
        /resume:
          post:
            (AYSBased):
            displayName: ResumeVM
            description: Resumes the virtual machine
            responses:
              204:
                description: Virtual machine resumed successfully
        /shutdown:
          post:
            (AYSBased):
            displayName: ShutdownVM
            description: Gracefully shutdown the virtual machine
            responses:
              204:
                description: Virtual machine shutdown request passed successfully
        /migrate:
          post:
            (AYSBased):
            displayName: MigrateVM
            description: Migrate the virtual machine to another host
            body:
              application/json:
                type: VMMigrate
            responses:
              204:
                description: Virtual machine migration request passed successfully
/storageclusters:
  description: Create and get information about a storage clusters
  post:
    (AYSBased):
    displayName: DeployNewCluster
    description: Deploy new cluster
    body:
      application/json:
        type: ClusterCreate
    responses:
      201:
        description: Deployment started
        headers:
          Location:
            description: URL to newly created storage cluster resource
  get:
    (AYSBased):
    displayName: ListAllClusters
    description: List all running clusters
    responses:
      200:
        body:
          application/json:
            type: string[]
  /{label}:
    get:
      (AYSBased):
      displayName: GetClusterInfo
      description: Get full information about specific cluster
      responses:
        200:
          body:
            application/json:
              type: Cluster
    delete:
      (AYSBased):
      displayName: KillCluster
      description: Kill cluster
      responses:
        204:
          description: Storage cluster destroyed successfully
/vdisks:
  get:
    (AYSBased):
    displayName: ListVdisks
    description: List vdisks
    responses:
      200:
        body:
          application/json:
            type: VdiskListItem[]
  post:
    (AYSBased):
    displayName: CreateNewVdisk
    description: Create a new vdisk, can be a copy from an existing vdisk
    body:
      application/json:
        type: VdiskCreate
    responses:
      201:
        headers:
          Location:
            description: URL to the created vdisk resource
      400:
        description: The storagecluster does not exist
      409:
        description: A vdisk with this ID already exists
  /{vdiskid}:
    get:
      (AYSBased):
      displayName: GetVdiskInfo
      description: Get vdisk information
      responses:
        200:
          body:
            application/json:
              type: Vdisk
        404:
          description: The vdisk does not exist
    delete:
      (AYSBased):
      displayName: DeleteVdisk
      description: Delete Vdisk
      responses:
        204:
          description: Deleted
        404:
          description: The vdisk does not exist
    /resize:
      post:
        (AYSBased):
        displayName: ResizeVdisk
        description: Resize vdisk
        body:
          application/json:
            type: VdiskResize
        responses:
          204:
            description: Vdisk resized
    /rollback:
      post:
        (AYSBased):
        displayName: RollbackVdisk
        description: Rollback a vdisk to a previous state
        body:
          application/json:
            type: VdiskRollback
        responses:
          204:
            description: Rollback started successfully
